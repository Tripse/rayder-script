
vars:
  URL: "urls.txt"
  USAGE: "rayder -w workflow.yaml URL=urls.txt"

parallel: false

modules:  
  # stop gau for lots of  tragets
  # - name: gau
  #   silent: true
  #   cmds:
  #     - cat {{URL}} | gauu | tee gau_result.txt

  - name: katana 
    silent: true
    cmds:
      - cat {{URL}} | katana -jc -jsl -xhr -kf all -fx -fs dn | tee katana_result.txt
  
  - name: conform
    silent: true
    cmds:
      - cat katana_result.txt | anew | tee urls_result.txt
      # - cat gau_result.txt katana_result.txt | anew | tee urls_result.txt

  - name: sensitive
    silent: true
    cmds:
      - cat urls_result.txt | gff intersting_ext_bounty | httpx -silent -fc 404 | tee sensitive_output.txt
      - cat sensitive_output.txt | grep -v -E '\.(jpg|jpeg|gif|png|PNG|svg|ico|js|com|css|jhtml|html|do|jsp|php|asp|aspx|jspx|tif|tiff|ttf|woff|woff2)$' | tee sensitive_result.txt

  - name: lfi dast
    silent: true
    cmds:
      - cat urls_result.txt | gff lfi | uro | sed 's/=.*/=/' | anew | nuclei -t ~/nuclei-tripse/dast/lfi/ -dast | tee lfi_result.txt

  - name: sqli dast
    silent: true
    cmds:
      - cat urls_result.txt | gff sqli | uro | sed 's/=.*/=/' | anew | nuclei -t ~/nuclei-tripse/dast/sqli/ -dast | tee sqli_result.txt

  - name: ssrf dast
    silent: true
    cmds:
      - cat urls_result.txt | gff ssrf | uro | sed 's/=.*/=/' | anew | nuclei -t ~/nuclei-tripse/dast/ssrf/ -dast | tee ssrf_result.txt
    
  - name: rce dast
    silent: true
    cmds:
      - cat urls_result.txt | gff rce | uro | sed 's/=.*/=/' | anew | nuclei -t ~/nuclei-tripse/dast/cmdi/ -dast | tee rce_result.txt

  - name: ssti dast
    silent: true
    cmds:
      - cat urls_result.txt | gff ssti | uro | sed 's/=.*/=/' | anew | nuclei -t ~/nuclei-tripse/dast/ssti/ -dast | tee ssti_result.txt
  
  - name: nuclei bounty
    silent: true
    cmds:
      - cat urls.txt | nuclei -t ~/nuclei-tripse/bounty | tee bounty_template_result.txt

  - name: xray scan
    silent: true
    cmds:
      - for i in $(cat urls_result.txt); do ./xray ws --basic-crawler $i --plugins xss,sqldet,xxe,ssrf,cmd-injection,path-traversal --ho $(date +"%T").html ; done

  - name: dalfox reflection xss
    silent: true
    cmds:
      - cat urls_result.txt | grep -Ev '\.(jpg|jpeg|gif|css|tif|tiff|png|ttf|woff|woff2|ico|pdf|svg|txt)$' | anew | dalfox pipe --skip-bav --skip-mining-dom -S --only-poc r --ignore-return 302,404,403 -o xss_result.txt
  
  - name: clean
    silent: true
    cmds:
      - rm -rf gau_result.txt katana_result.txt sensitive_output.txt